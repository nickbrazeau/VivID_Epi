axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
legend.position = "bottom"
)
plotObj <- ggplot() +
geom_sf(data=dhs13_mapdf, aes(fill = mutprev, prov=prov, mutprev=mutprev, L95CI=L95CI, U95CI=U95CI)) +
#scale_fill_gradient2("Mutation Prev", low = "#a50026", mid = "#ffffbf", high = "#313695", rescaler) +
scale_fill_gradientn(colours = terrain.colors(10)) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
plot.title =  element_text(size=14, family = "Arial", face="bold", hjust=0.5, vjust=0.5),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
legend.position = "bottom"
)
plotly::ggplotly(plotObj)
plotObj <- ggplot() +
geom_sf(data=dhs13_mapdf, aes(fill = mutprev, prov=prov, mutprev=mutprev, L95CI=L95CI, U95CI=U95CI)) +
scale_fill_gradientn("Mutation Prev", colours = c("#a50026", "#ffffbf", "#313695")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
plot.title =  element_text(size=14, family = "Arial", face="bold", hjust=0.5, vjust=0.5),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
legend.position = "bottom"
)
plotly::ggplotly(plotObj)
plotObj <- ggplot() +
geom_sf(data=dhs13_mapdf, aes(fill = mutprev, prov=prov, mutprev=mutprev, L95CI=L95CI, U95CI=U95CI)) +
scale_fill_gradientn("Mutation Prev", colours = c("#a50026", "#ffffbf", "#313695")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
plot.title =  element_blank(),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
legend.text = element_text(size=12, family = "Arial", face="bold", hjust=0.5, vjust=0.5),
legend.position = "bottom",
legend.title.align=0.5
)
plotly::ggplotly(plotObj)
plotObj <- ggplot() +
geom_sf(data=dhs13_mapdf, aes(fill = mutprev, prov=prov, mutprev=mutprev, L95CI=L95CI, U95CI=U95CI)) +
scale_fill_gradientn("Mutation \n Prev", colours = c("#a50026", "#ffffbf", "#313695")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
plot.title =  element_blank(),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
legend.position = "bottom",
legend.title.align=0.5,
legend.title = element_text(size=12, family = "Arial", face="bold", hjust=0.5, vjust=0.5),
legend.text = element_text(size=10, family = "Arial", face="bold", hjust=0.5, vjust=0.5)
)
plotly::ggplotly(plotObj)
seq(from = 1e2, to=1e4, by=1e2)
seq(from = 1e2, to=1e3, by=50)
seq(from = 1e2, to=5e3, by=50), selected = 500)
seq(from = 1e2, to=5e3, by=50{)}
seq(from = 1e2, to=5e3, by=50)
dt
library(DT)
install.packages("Dt")
install.packages("DT")
install.packages("gridExtra")
grid.table
library(gridExtra)
?grid.arrange
?grid.arrange
grid::grid.newpage()
gridExtra::grid.arrange(grobs = ret,
layout_matrix = rbind(rep(1,3), rep(2,2))
)
# Plot chart and table into one object
ret <- list(plotObj,
tbl)
gridExtra::grid.arrange(grobs = ret,
layout_matrix = rbind(rep(1,3), rep(2,2))
)
rbind(rep(1,3), rep(2,2))
gridExtra::grid.arrange(grobs = ret,
layout_matrix = c(1,1,2)
)
gridExtra::grid.arrange(grobs = ret,
layout_matrix = matrix(1,1,2)
)
gridExtra::grid.arrange(grobs = ret,
ncol=2
)
gridExtra::grid.arrange(plotObj, tbl,
ncol=2
)
gridExtra::grid.arrange(plotObj,
ncol=2
)
tt <- ttheme_default(colhead=list(fg_params = list(parse=TRUE)))
plotObj
tt <- ttheme_default(colhead=list(fg_params = list(parse=TRUE)))
tbl <- tableGrob(dhs13_sub_sum, rows=NULL, theme=tt)
gridExtra::grid.arrange(tbl,
ncol=2
)
tbl <- tableGrob(dhs13_sub_sum)
grid::grid.newpage()
gridExtra::grid.arrange(tbl,
ncol=2
)
grid::grid.newpage()
tbl <- tableGrob(dhs13_sub_sum)
grid::grid.newpage()
gridExtra::grid.arrange(tbl
)
install.packages("ggpubr")
tbl <-
# Plot chart and table into one object
grid.arrange(
tableGrob(dhs13_sub_sum, rows = NULL),
plotObj,
ncol = 2,
widths = c(1.5, 1),
clip = FALSE)
?tableGrob
p1 <- ggplot() +
geom_sf(data=dhs13_mapdf, aes(fill = mutprev)) +
scale_fill_gradientn("Mutation \n Prev", colours = c("#d0d1e6", "#3690c0", "#253494")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
plot.title =  element_blank(),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
legend.position = "bottom",
legend.title = element_text(size=16, family = "Arial", face="bold"),
legend.title.align=0.5,
legend.text = element_text(size=14, family = "Arial", face="bold", hjust=0.5, vjust=0.5)
)
rbind(c(rep(1,10), NA, rep(3,10)),
c(rep(1,10), NA, rep(3,10)),
c(rep(1,10), NA, rep(3,10)),
c(rep(2,10), NA, rep(3,10)),
c(rep(2,10), NA, rep(3,10)),
c(rep(2,10), NA, rep(3,10)),
c(rep(4,21))
)
p1 <- ggplot() +
geom_sf(data=dhs13_mapdf, aes(fill = mutprev)) +
scale_fill_gradientn("Mutation \n Prev", colours = c("#d0d1e6", "#3690c0", "#253494")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
plot.title =  element_blank(),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
legend.position = "bottom",
legend.title = element_text(size=16, family = "Arial", face="bold"),
legend.title.align=0.5,
legend.text = element_text(size=14, family = "Arial", face="bold", hjust=0.5, vjust=0.5)
)
#https://stackoverflow.com/questions/11774703/adding-text-to-a-grid-table-plot/11775211#11775211
p2 <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL)
title <- grid::textGrob("Summary of Province-Level Mutation Prevalence", gp=grid::gpar(fontfamily="Arial", fontsize=12, fontface="bold"))
padding <- unit(5,"mm")
p2 <- gtable::gtable_add_rows(
p2,
heights = grid::grobHeight(title) + padding,
pos = 0)
p2 <- gtable::gtable_add_grob(
p2,
list(title),
1, 1, 1, ncol(p2))
# plot 4 white space - https://stackoverflow.com/questions/21529926/arrange-ggplots-together-in-custom-ratios-and-spacing
blank <- grid::rectGrob(gp=grid::gpar(col="white")) # make a white spacer grob
grobs <- list(p1,
p2,
blank)
grid::grid.newpage()
gridExtra::grid.arrange(grobs = grobs, layout_matrix = rbind(c(rep(1,10)),
c(rep(1,10)),
c(rep(1,10)),
c(rep(NA,10)),
c(rep(2,10)),
c(rep(2,10))
)
)
grobs
gridExtra::grid.arrange(grobs = grobs, layout_matrix = rbind(c(rep(1,10)),
c(rep(1,10)),
c(rep(1,10)),
c(rep(NA,10)),
c(rep(2,10)),
c(rep(2,10))
)
)
grobs <- list(p1,
blank)
grid::grid.newpage()
gridExtra::grid.arrange(grobs = grobs, layout_matrix = rbind(c(rep(1,10)),
c(rep(1,10)),
c(rep(1,10)),
c(rep(NA,10)),
c(rep(2,10)),
c(rep(2,10))
)
)
#https://stackoverflow.com/questions/11774703/adding-text-to-a-grid-table-plot/11775211#11775211
p2 <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL)
title <- grid::textGrob("Summary of Province-Level Mutation Prevalence", gp=grid::gpar(fontfamily="Arial", fontsize=12, fontface="bold"))
p2
padding <- unit(5,"mm")
p2 <- gtable::gtable_add_rows(
p2,
heights = grid::grobHeight(title) + padding,
pos = 0)
p2 <- gtable::gtable_add_grob(
p2,
list(title),
1, 1, 1, ncol(p2))
p2
p2
grid.arrange(p2)
rbind(c(rep(1,10)),
c(rep(1,10)),
c(rep(1,10)),
c(rep(NA,10)),
c(rep(2,10)),
c(rep(2,10))
)
grobs <- list(p1,
p2,
blank)
blank
grobs <- list(p1,
p2)
grid::grid.newpage()
gridExtra::grid.arrange(grobs = grobs, layout_matrix = rbind(c(rep(1,10)),
c(rep(1,10)),
c(rep(1,10)),
c(rep(NA,10)),
c(rep(2,10)),
c(rep(2,10)))
)
mytheme <- gridExtra::ttheme_default(
core = list(fg_params=list(cex = 2.0)),
colhead = list(fg_params=list(cex = 1.0)),
rowhead = list(fg_params=list(cex = 1.0)))
#https://stackoverflow.com/questions/11774703/adding-text-to-a-grid-table-plot/11775211#11775211
p2 <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = mytheme)
#https://stackoverflow.com/questions/11774703/adding-text-to-a-grid-table-plot/11775211#11775211
p2 <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = mytheme)
mytheme <- gridExtra::ttheme_default(
core = list(fg_params=list(cex = 2.0)),
colhead = list(fg_params=list(cex = 1.0)),
rowhead = list(fg_params=list(cex = 1.0)))
grid.draw(p2)
/grid.draw
?grid.draw
grid::grid.draw(p2)
#https://stackoverflow.com/questions/11774703/adding-text-to-a-grid-table-plot/11775211#11775211
p2 <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = mytheme)
mytheme <- gridExtra::ttheme_default(
core = list(fg_params=list(cex = 0.2)),
colhead = list(fg_params=list(cex = 0.5)),
rowhead = list(fg_params=list(cex = 0.5)))
grid::grid.draw(p2)
#https://stackoverflow.com/questions/11774703/adding-text-to-a-grid-table-plot/11775211#11775211
mytheme <- gridExtra::ttheme_default(
core = list(fg_params=list(cex = 0.2)),
colhead = list(fg_params=list(cex = 0.5)),
rowhead = list(fg_params=list(cex = 0.5)))
p2 <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = mytheme)
grid::grid.draw(p2)
#https://stackoverflow.com/questions/11774703/adding-text-to-a-grid-table-plot/11775211#11775211
p2 <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL)
title <- grid::textGrob("Summary of Province-Level Mutation Prevalence", gp=grid::gpar(fontfamily="Arial", fontsize=12, fontface="bold"))
padding <- unit(5,"mm")
p2 <- gtable::gtable_add_rows(
p2,
heights = grid::grobHeight(title) + padding,
pos = 0)
p2 <- gtable::gtable_add_grob(
p2,
list(title),
1, 1, 1, ncol(p2))
grobs <- list(p1,
p2)
grid::grid.newpage()
gridExtra::grid.arrange(grobs = grobs, layout_matrix = rbind(c(rep(1,10)),
c(rep(1,10)),
c(rep(1,10)),
c(rep(NA,10)),
c(rep(NA,10)),
c(rep(NA,10)),
c(rep(2,10)),
c(rep(2,10)))
)
p1 <- ggplot() +
geom_sf(data=dhs13_mapdf, aes(fill = mutprev)) +
scale_fill_gradientn("Mutation \n Prev", colours = c("#d0d1e6", "#3690c0", "#253494")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
plot.title =  element_blank(),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
legend.position = "bottom",
legend.title = element_text(size=16, family = "Arial", face="bold"),
legend.title.align=0.5,
legend.text = element_text(size=14, family = "Arial", face="bold", hjust=0.5, vjust=0.5, align=0)
)
p1 <- ggplot() +
geom_sf(data=dhs13_mapdf, aes(fill = mutprev)) +
scale_fill_gradientn("Mutation \n Prev", colours = c("#d0d1e6", "#3690c0", "#253494")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
plot.title =  element_blank(),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
legend.position = "bottom",
legend.title = element_text(size=16, family = "Arial", face="bold"),
legend.title.align=0.5,
legend.text = element_text(size=14, family = "Arial", face="bold", hjust=0.5, vjust=0.5, angle=90)
)
p1
list(fg_params=list(hjust=1, x=0.9))
tt2 <- ttheme_default(core=list(fg_params=list(hjust=1, x=0.9)))
tbl <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = tt2)
gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = tt2)
plot(tbl)
grid.draw(tbl)
grid::grid.draw(tbl)
tt2 <- ttheme_default(core = list(fg_params=list(cex = 2.0)))
gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = tt2)
tbl <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = tt2)
grid::grid.draw(tbl)
tt2 <- ttheme_default(core = list(fg_params=list(cex = 0.5)))
tbl <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = tt2)
grid::grid.draw(tbl)
dhs13_sub %>%
dplyr::left_join(x=., y=provdict, by = "shnprovin") %>%
dplyr::mutate(NAME_1 = provname) %>%
dplyr::group_by(NAME_1) %>%
dplyr::summarise(n=n(),
mutprev=mean(mut),
mutsd = sd(mut),
L95CI = mutprev - 1.96*(mutsd/sqrt(n)),
U95CI = mutprev + 1.96*(mutsd/sqrt(n))) %>%
dplyr::mutate_if(is.numeric, round(.,2))
provdict <- read_tsv(file = "~/Google Drive/PhD_Work/Maps/DRC_GADM/dhs_shnprovin_mapfile_variabledocumentation.tab.txt")
DRCprovfiles <- dir("~/Google Drive/PhD_Work/Maps/DRC_GADM/sf_gadm/", full.names = T)
DRC <- lapply(DRCprovfiles, function(x)readRDS(x))
DRCprov <- DRC[[2]]
provdict <- read_tsv(file = "~/Google Drive/PhD_Work/Maps/DRC_GADM/dhs_shnprovin_mapfile_variabledocumentation.tab.txt")
dhs13_short$Sprob <- dhs13_short$sampleweight/sum(dhs13_short$sampleweight)
rsamp <- sample(x=dhs13_short$barcode, size=input$n, replace = F, prob = dhs13_short$Sprob)
rsamp
dhs13_sub <- dhs13_short %>%
dplyr::filter(barcode %in% rsamp)
dhs13_sub
dhs13_sub$mut <- rbinom(n = length(rsamp), size=1, prob = input$pAF)
dhs13_sub$mut
dhs13_sub$mut <- rbinom(n = length(rsamp), size=1, prob = 0.8)
dhs13_sub$mut
dhs13_sub %>%
dplyr::left_join(x=., y=provdict, by = "shnprovin") %>%
dplyr::mutate(NAME_1 = provname) %>%
dplyr::group_by(NAME_1) %>%
dplyr::summarise(n=n(),
mutprev=mean(mut),
mutsd = sd(mut),
L95CI = mutprev - 1.96*(mutsd/sqrt(n)),
U95CI = mutprev + 1.96*(mutsd/sqrt(n))) %>%
dplyr::mutate_if(is.numeric, round(.,2))
dhs13_sub %>%
dplyr::left_join(x=., y=provdict, by = "shnprovin") %>%
dplyr::mutate(NAME_1 = provname) %>%
dplyr::group_by(NAME_1) %>%
dplyr::summarise(n=n(),
mutprev=mean(mut),
mutsd = sd(mut),
L95CI = mutprev - 1.96*(mutsd/sqrt(n)),
U95CI = mutprev + 1.96*(mutsd/sqrt(n))) %>%
mutate_if(is.numeric, funs(round(., 2)))
dhs13_sub_sum <- dhs13_sub %>%
dplyr::left_join(x=., y=provdict, by = "shnprovin") %>%
dplyr::mutate(NAME_1 = provname) %>%
dplyr::group_by(NAME_1) %>%
dplyr::summarise(n=n(),
mutprev=mean(mut),
mutsd = sd(mut),
L95CI = mutprev - 1.96*(mutsd/sqrt(n)),
U95CI = mutprev + 1.96*(mutsd/sqrt(n))) %>%
mutate_if(is.numeric, funs(round(., 2)))
# setup
dhs13_mapdf <- DRCprov %>%
dplyr::left_join(x=., y = dhs13_sub_sum, by="NAME_1") %>%
dplyr::mutate(prov = NAME_1)
plotObj <- ggplot() +
geom_sf(data=dhs13_mapdf, aes(fill = mutprev)) +
scale_fill_gradientn("Mutation \n Prev", colours = c("#d0d1e6", "#3690c0", "#253494")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
plot.title =  element_blank(),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
legend.position = "bottom",
legend.title = element_text(size=16, family = "Arial", face="bold"),
legend.title.align=0.5,
legend.text = element_text(size=14, family = "Arial", face="bold", hjust=0.5, vjust=0.5, angle=90)
)
tt2 <- ttheme_default(core = list(fg_params=list(cex = 0.5)))
tbl <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = tt2)
grid::grid.draw(tbl)
grid::grid.newpage()
tbl$widths <- unit(rep(1/ncol(tbl), ncol(tbl)), "npc")
grid::grid.draw(tbl)
1/ncol(tbl)
unit(rep(1/ncol(tbl), ncol(tbl)), "npc")
tbl$widths <- unit(rep(1/ncol(tbl)*10, ncol(tbl)), "npc")
grid::grid.draw(tbl)
1/ncol(tbl)*10,
tbl$widths <- unit(rep(1/(ncol(tbl)*10), ncol(tbl)), "npc")
grid::grid.draw(tbl)
tbl$widths <- unit(rep(1/(ncol(tbl)*2), ncol(tbl)), "npc")
grid::grid.draw(tbl)
grid.new
grid::grid.newpage()
tt2 <- ttheme_default(core = list(fg_params=list(cex = 0.5)))
tbl <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = tt2)
tbl$widths <- unit(rep(1/(ncol(tbl)*2), ncol(tbl)), "npc")
tbl$heights <- unit(rep(1/(ncol(tbl)*2), ncol(tbl)), "npc")
grid::grid.draw(tbl)
tbl <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = tt2)
grid::grid.draw(tbl)
grid::grid.newpage()
tt2 <- ttheme_default(core = list(fg_params=list(cex = 0.5)))
tbl <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = tt2)
tbl$widths <- unit(rep(1/(ncol(tbl)*2), ncol(tbl)), "npc")
tbl$heights <- unit(rep(1/(nrow(tbl)*2), nrow(tbl)), "npc")
grid::grid.draw(tbl)
grid::grid.newpage()
tt2 <- ttheme_default(core = list(fg_params=list(cex = 0.5)),
colhead=list(fg_params = list(cex=0.5)))
tbl <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = tt2)
tbl$widths <- unit(rep(1/(ncol(tbl)*2), ncol(tbl)), "npc")
tbl$heights <- unit(rep(1/(nrow(tbl)*2), nrow(tbl)), "npc")
grid::grid.draw(tbl)
gridExtra::grid.arrange(plotObj, tbl,
ncol=2)
DT
dt
1/0.25
?grid.arrange
gridExtra::grid.arrange(plotObj, tbl, blank,
layout_matrix=c(1,1,2,2,3))
matrix(c(1,1,2,2,3))
gridExtra::grid.arrange(plotObj, tbl, blank,
layout_matrix=matrix(x(1,1,2,2,3)))
gridExtra::grid.arrange(plotObj, tbl, blank,
layout_matrix=matrix(c(1,1,2,2,3)))
gridExtra::grid.arrange(plotObj, tbl, blank,
layout_matrix=matrix(c(1,1,2,2,3)))
blank <- grid::rectGrob(gp=grid::gpar(col="white")) # make a white spacer grob
plot(blank)
blank
grid.draw(blank)
blank <- grid::rectGrob(gp=grid::gpar(col="white")) # make a white spacer grob
grid::grid.draw(blank)
length(seq(1:100))
t <- reactive({ hist(sample(x=seq(1:100), size=input$n, replace = T, prob = rep(0.5, 100))) })
