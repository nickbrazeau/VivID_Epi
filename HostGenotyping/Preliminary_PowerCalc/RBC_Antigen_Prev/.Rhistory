axis.title.x = element_blank(),
legend.position = "bottom",
legend.title = element_text(size=16, family = "Arial", face="bold"),
legend.title.align=0.5,
legend.text = element_text(size=14, family = "Arial", face="bold", hjust=0.5, vjust=0.5)
)
rbind(c(rep(1,10), NA, rep(3,10)),
c(rep(1,10), NA, rep(3,10)),
c(rep(1,10), NA, rep(3,10)),
c(rep(2,10), NA, rep(3,10)),
c(rep(2,10), NA, rep(3,10)),
c(rep(2,10), NA, rep(3,10)),
c(rep(4,21))
)
p1 <- ggplot() +
geom_sf(data=dhs13_mapdf, aes(fill = mutprev)) +
scale_fill_gradientn("Mutation \n Prev", colours = c("#d0d1e6", "#3690c0", "#253494")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
plot.title =  element_blank(),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
legend.position = "bottom",
legend.title = element_text(size=16, family = "Arial", face="bold"),
legend.title.align=0.5,
legend.text = element_text(size=14, family = "Arial", face="bold", hjust=0.5, vjust=0.5)
)
#https://stackoverflow.com/questions/11774703/adding-text-to-a-grid-table-plot/11775211#11775211
p2 <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL)
title <- grid::textGrob("Summary of Province-Level Mutation Prevalence", gp=grid::gpar(fontfamily="Arial", fontsize=12, fontface="bold"))
padding <- unit(5,"mm")
p2 <- gtable::gtable_add_rows(
p2,
heights = grid::grobHeight(title) + padding,
pos = 0)
p2 <- gtable::gtable_add_grob(
p2,
list(title),
1, 1, 1, ncol(p2))
# plot 4 white space - https://stackoverflow.com/questions/21529926/arrange-ggplots-together-in-custom-ratios-and-spacing
blank <- grid::rectGrob(gp=grid::gpar(col="white")) # make a white spacer grob
grobs <- list(p1,
p2,
blank)
grid::grid.newpage()
gridExtra::grid.arrange(grobs = grobs, layout_matrix = rbind(c(rep(1,10)),
c(rep(1,10)),
c(rep(1,10)),
c(rep(NA,10)),
c(rep(2,10)),
c(rep(2,10))
)
)
grobs
gridExtra::grid.arrange(grobs = grobs, layout_matrix = rbind(c(rep(1,10)),
c(rep(1,10)),
c(rep(1,10)),
c(rep(NA,10)),
c(rep(2,10)),
c(rep(2,10))
)
)
grobs <- list(p1,
blank)
grid::grid.newpage()
gridExtra::grid.arrange(grobs = grobs, layout_matrix = rbind(c(rep(1,10)),
c(rep(1,10)),
c(rep(1,10)),
c(rep(NA,10)),
c(rep(2,10)),
c(rep(2,10))
)
)
#https://stackoverflow.com/questions/11774703/adding-text-to-a-grid-table-plot/11775211#11775211
p2 <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL)
title <- grid::textGrob("Summary of Province-Level Mutation Prevalence", gp=grid::gpar(fontfamily="Arial", fontsize=12, fontface="bold"))
p2
padding <- unit(5,"mm")
p2 <- gtable::gtable_add_rows(
p2,
heights = grid::grobHeight(title) + padding,
pos = 0)
p2 <- gtable::gtable_add_grob(
p2,
list(title),
1, 1, 1, ncol(p2))
p2
p2
grid.arrange(p2)
rbind(c(rep(1,10)),
c(rep(1,10)),
c(rep(1,10)),
c(rep(NA,10)),
c(rep(2,10)),
c(rep(2,10))
)
grobs <- list(p1,
p2,
blank)
blank
grobs <- list(p1,
p2)
grid::grid.newpage()
gridExtra::grid.arrange(grobs = grobs, layout_matrix = rbind(c(rep(1,10)),
c(rep(1,10)),
c(rep(1,10)),
c(rep(NA,10)),
c(rep(2,10)),
c(rep(2,10)))
)
mytheme <- gridExtra::ttheme_default(
core = list(fg_params=list(cex = 2.0)),
colhead = list(fg_params=list(cex = 1.0)),
rowhead = list(fg_params=list(cex = 1.0)))
#https://stackoverflow.com/questions/11774703/adding-text-to-a-grid-table-plot/11775211#11775211
p2 <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = mytheme)
#https://stackoverflow.com/questions/11774703/adding-text-to-a-grid-table-plot/11775211#11775211
p2 <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = mytheme)
mytheme <- gridExtra::ttheme_default(
core = list(fg_params=list(cex = 2.0)),
colhead = list(fg_params=list(cex = 1.0)),
rowhead = list(fg_params=list(cex = 1.0)))
grid.draw(p2)
/grid.draw
?grid.draw
grid::grid.draw(p2)
#https://stackoverflow.com/questions/11774703/adding-text-to-a-grid-table-plot/11775211#11775211
p2 <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = mytheme)
mytheme <- gridExtra::ttheme_default(
core = list(fg_params=list(cex = 0.2)),
colhead = list(fg_params=list(cex = 0.5)),
rowhead = list(fg_params=list(cex = 0.5)))
grid::grid.draw(p2)
#https://stackoverflow.com/questions/11774703/adding-text-to-a-grid-table-plot/11775211#11775211
mytheme <- gridExtra::ttheme_default(
core = list(fg_params=list(cex = 0.2)),
colhead = list(fg_params=list(cex = 0.5)),
rowhead = list(fg_params=list(cex = 0.5)))
p2 <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = mytheme)
grid::grid.draw(p2)
#https://stackoverflow.com/questions/11774703/adding-text-to-a-grid-table-plot/11775211#11775211
p2 <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL)
title <- grid::textGrob("Summary of Province-Level Mutation Prevalence", gp=grid::gpar(fontfamily="Arial", fontsize=12, fontface="bold"))
padding <- unit(5,"mm")
p2 <- gtable::gtable_add_rows(
p2,
heights = grid::grobHeight(title) + padding,
pos = 0)
p2 <- gtable::gtable_add_grob(
p2,
list(title),
1, 1, 1, ncol(p2))
grobs <- list(p1,
p2)
grid::grid.newpage()
gridExtra::grid.arrange(grobs = grobs, layout_matrix = rbind(c(rep(1,10)),
c(rep(1,10)),
c(rep(1,10)),
c(rep(NA,10)),
c(rep(NA,10)),
c(rep(NA,10)),
c(rep(2,10)),
c(rep(2,10)))
)
p1 <- ggplot() +
geom_sf(data=dhs13_mapdf, aes(fill = mutprev)) +
scale_fill_gradientn("Mutation \n Prev", colours = c("#d0d1e6", "#3690c0", "#253494")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
plot.title =  element_blank(),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
legend.position = "bottom",
legend.title = element_text(size=16, family = "Arial", face="bold"),
legend.title.align=0.5,
legend.text = element_text(size=14, family = "Arial", face="bold", hjust=0.5, vjust=0.5, align=0)
)
p1 <- ggplot() +
geom_sf(data=dhs13_mapdf, aes(fill = mutprev)) +
scale_fill_gradientn("Mutation \n Prev", colours = c("#d0d1e6", "#3690c0", "#253494")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
plot.title =  element_blank(),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
legend.position = "bottom",
legend.title = element_text(size=16, family = "Arial", face="bold"),
legend.title.align=0.5,
legend.text = element_text(size=14, family = "Arial", face="bold", hjust=0.5, vjust=0.5, angle=90)
)
p1
list(fg_params=list(hjust=1, x=0.9))
tt2 <- ttheme_default(core=list(fg_params=list(hjust=1, x=0.9)))
tbl <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = tt2)
gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = tt2)
plot(tbl)
grid.draw(tbl)
grid::grid.draw(tbl)
tt2 <- ttheme_default(core = list(fg_params=list(cex = 2.0)))
gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = tt2)
tbl <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = tt2)
grid::grid.draw(tbl)
tt2 <- ttheme_default(core = list(fg_params=list(cex = 0.5)))
tbl <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = tt2)
grid::grid.draw(tbl)
dhs13_sub %>%
dplyr::left_join(x=., y=provdict, by = "shnprovin") %>%
dplyr::mutate(NAME_1 = provname) %>%
dplyr::group_by(NAME_1) %>%
dplyr::summarise(n=n(),
mutprev=mean(mut),
mutsd = sd(mut),
L95CI = mutprev - 1.96*(mutsd/sqrt(n)),
U95CI = mutprev + 1.96*(mutsd/sqrt(n))) %>%
dplyr::mutate_if(is.numeric, round(.,2))
provdict <- read_tsv(file = "~/Google Drive/PhD_Work/Maps/DRC_GADM/dhs_shnprovin_mapfile_variabledocumentation.tab.txt")
DRCprovfiles <- dir("~/Google Drive/PhD_Work/Maps/DRC_GADM/sf_gadm/", full.names = T)
DRC <- lapply(DRCprovfiles, function(x)readRDS(x))
DRCprov <- DRC[[2]]
provdict <- read_tsv(file = "~/Google Drive/PhD_Work/Maps/DRC_GADM/dhs_shnprovin_mapfile_variabledocumentation.tab.txt")
dhs13_short$Sprob <- dhs13_short$sampleweight/sum(dhs13_short$sampleweight)
rsamp <- sample(x=dhs13_short$barcode, size=input$n, replace = F, prob = dhs13_short$Sprob)
rsamp
dhs13_sub <- dhs13_short %>%
dplyr::filter(barcode %in% rsamp)
dhs13_sub
dhs13_sub$mut <- rbinom(n = length(rsamp), size=1, prob = input$pAF)
dhs13_sub$mut
dhs13_sub$mut <- rbinom(n = length(rsamp), size=1, prob = 0.8)
dhs13_sub$mut
dhs13_sub %>%
dplyr::left_join(x=., y=provdict, by = "shnprovin") %>%
dplyr::mutate(NAME_1 = provname) %>%
dplyr::group_by(NAME_1) %>%
dplyr::summarise(n=n(),
mutprev=mean(mut),
mutsd = sd(mut),
L95CI = mutprev - 1.96*(mutsd/sqrt(n)),
U95CI = mutprev + 1.96*(mutsd/sqrt(n))) %>%
dplyr::mutate_if(is.numeric, round(.,2))
dhs13_sub %>%
dplyr::left_join(x=., y=provdict, by = "shnprovin") %>%
dplyr::mutate(NAME_1 = provname) %>%
dplyr::group_by(NAME_1) %>%
dplyr::summarise(n=n(),
mutprev=mean(mut),
mutsd = sd(mut),
L95CI = mutprev - 1.96*(mutsd/sqrt(n)),
U95CI = mutprev + 1.96*(mutsd/sqrt(n))) %>%
mutate_if(is.numeric, funs(round(., 2)))
dhs13_sub_sum <- dhs13_sub %>%
dplyr::left_join(x=., y=provdict, by = "shnprovin") %>%
dplyr::mutate(NAME_1 = provname) %>%
dplyr::group_by(NAME_1) %>%
dplyr::summarise(n=n(),
mutprev=mean(mut),
mutsd = sd(mut),
L95CI = mutprev - 1.96*(mutsd/sqrt(n)),
U95CI = mutprev + 1.96*(mutsd/sqrt(n))) %>%
mutate_if(is.numeric, funs(round(., 2)))
# setup
dhs13_mapdf <- DRCprov %>%
dplyr::left_join(x=., y = dhs13_sub_sum, by="NAME_1") %>%
dplyr::mutate(prov = NAME_1)
plotObj <- ggplot() +
geom_sf(data=dhs13_mapdf, aes(fill = mutprev)) +
scale_fill_gradientn("Mutation \n Prev", colours = c("#d0d1e6", "#3690c0", "#253494")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
plot.title =  element_blank(),
axis.ticks = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
legend.position = "bottom",
legend.title = element_text(size=16, family = "Arial", face="bold"),
legend.title.align=0.5,
legend.text = element_text(size=14, family = "Arial", face="bold", hjust=0.5, vjust=0.5, angle=90)
)
tt2 <- ttheme_default(core = list(fg_params=list(cex = 0.5)))
tbl <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = tt2)
grid::grid.draw(tbl)
grid::grid.newpage()
tbl$widths <- unit(rep(1/ncol(tbl), ncol(tbl)), "npc")
grid::grid.draw(tbl)
1/ncol(tbl)
unit(rep(1/ncol(tbl), ncol(tbl)), "npc")
tbl$widths <- unit(rep(1/ncol(tbl)*10, ncol(tbl)), "npc")
grid::grid.draw(tbl)
1/ncol(tbl)*10,
tbl$widths <- unit(rep(1/(ncol(tbl)*10), ncol(tbl)), "npc")
grid::grid.draw(tbl)
tbl$widths <- unit(rep(1/(ncol(tbl)*2), ncol(tbl)), "npc")
grid::grid.draw(tbl)
grid.new
grid::grid.newpage()
tt2 <- ttheme_default(core = list(fg_params=list(cex = 0.5)))
tbl <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = tt2)
tbl$widths <- unit(rep(1/(ncol(tbl)*2), ncol(tbl)), "npc")
tbl$heights <- unit(rep(1/(ncol(tbl)*2), ncol(tbl)), "npc")
grid::grid.draw(tbl)
tbl <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = tt2)
grid::grid.draw(tbl)
grid::grid.newpage()
tt2 <- ttheme_default(core = list(fg_params=list(cex = 0.5)))
tbl <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = tt2)
tbl$widths <- unit(rep(1/(ncol(tbl)*2), ncol(tbl)), "npc")
tbl$heights <- unit(rep(1/(nrow(tbl)*2), nrow(tbl)), "npc")
grid::grid.draw(tbl)
grid::grid.newpage()
tt2 <- ttheme_default(core = list(fg_params=list(cex = 0.5)),
colhead=list(fg_params = list(cex=0.5)))
tbl <- gridExtra::tableGrob(dhs13_sub_sum, rows=NULL, theme = tt2)
tbl$widths <- unit(rep(1/(ncol(tbl)*2), ncol(tbl)), "npc")
tbl$heights <- unit(rep(1/(nrow(tbl)*2), nrow(tbl)), "npc")
grid::grid.draw(tbl)
gridExtra::grid.arrange(plotObj, tbl,
ncol=2)
DT
dt
1/0.25
?grid.arrange
gridExtra::grid.arrange(plotObj, tbl, blank,
layout_matrix=c(1,1,2,2,3))
matrix(c(1,1,2,2,3))
gridExtra::grid.arrange(plotObj, tbl, blank,
layout_matrix=matrix(x(1,1,2,2,3)))
gridExtra::grid.arrange(plotObj, tbl, blank,
layout_matrix=matrix(c(1,1,2,2,3)))
gridExtra::grid.arrange(plotObj, tbl, blank,
layout_matrix=matrix(c(1,1,2,2,3)))
blank <- grid::rectGrob(gp=grid::gpar(col="white")) # make a white spacer grob
plot(blank)
blank
grid.draw(blank)
blank <- grid::rectGrob(gp=grid::gpar(col="white")) # make a white spacer grob
grid::grid.draw(blank)
length(seq(1:100))
t <- reactive({ hist(sample(x=seq(1:100), size=input$n, replace = T, prob = rep(0.5, 100))) })
# Chunk 1: setup
################################################################################
################       Imports       ###########################################
################################################################################
knitr::opts_chunk$set(echo = TRUE, collapse = TRUE)
# data wrangling
library(tidyverse)
library(tableone)
library(foreign)
#plotting
library(RColorBrewer)
library(gridExtra)
library(viridis)
library(ggridges)
#spatial
library(rgeos)
library(rgdal)
# housekeeping
library(rmarkdown)
# Epi
library(survey)
logit <- function(x, eps){
p <- log((x+eps)/(1-x+eps))
return(p)
}
# Chunk 2: read in 2013
######################################
###  DHS metadata & pfldh results  ###
######################################
dhs13adults <- read_csv(file="/Volumes/share/2. Projects/1. Current/AdultDHS_EpidemiologicalAnalysis/alladults_v3_clean.csv", col_names = T)
# let's look at size
#dim(dhs13adults)
colnames(dhs13adults) <- tolower(colnames(dhs13adults))
### NOTE: HV001 & HV002 were recoded to cluster and household to merge with the HIV dataset
colnames(dhs13adults)[which(colnames(dhs13adults) == "pfldh")] <- "pfcall"
## add in provnames
provdict <- read_tsv(file = "~/Google Drive/PhD_Work/DRC/DRC_ShapeFiles/DRC_DHS/dhs_shnprovin_mapfile_variabledocumentation.tab.txt")
dhs13adults <- left_join(x=dhs13adults, y=provdict, by=c("shnprovin"))
######################################
###     Cedars Pvivax Results      ###
######################################
#f <- file.choose()
f <- "~/Desktop/Database_Pv_PoScreen_20180629.xlsx"
pv <- readxl::read_excel(path=f, sheet = 1)
colnames(pv) <- tolower(colnames(pv))
# pv[pv == "Undetermined"] # this doesn't work bc of tibble?
pv$pv_pos <- ifelse(pv$`p. vivax 18s (ct)` != "Undetermined", 1, ifelse(is.na(pv$`p. vivax 18s (ct)`), NA, 0))
######################################
###   Tidy Cedars Pvivax Results   ###
######################################
# drop standards
pv <- pv[pv$task == "UNKNOWN",] # subset to non-strandard/ntc
pv <- pv[pv$id != "0",] # missing barcodes
table(pv$pv_pos, useNA = "always")
# make dhs13 comparable plate barcode
dhs13adults$dnaplate_short <- substr(x=as.character(dhs13adults$dnaplate), start=nchar(as.character(dhs13adults$dnaplate))-3, stop=nchar(as.character(dhs13adults$dnaplate)))
pv$`original plate m#`[pv$`original plate m#` == "M078"] <- "C078"
dhs13adults$dnaplate_short <- gsub("-", "UNC", dhs13adults$dnaplate_short)
# sanity check -- any of Cedar's dna plate names missing from dhs
if(FALSE %in% (pv$`original plate m#` %in% dhs13adults$dnaplate_short)){
stop("Plate names from Cedar's file don't match DHS")
}
## rename cedar's file to match
pv <- pv[, colnames(pv) %in% c("original plate m#", "id", "pv_pos", "p. vivax 18s (ct)")]
colnames(pv)[1:2] <- c("dnaplate_short", "barcode")
pv$barcode <- toupper(pv$barcode)
m <- inner_join(dhs13adults, pv, by=c("dnaplate_short", "barcode"))
sum(m$pv_pos, na.rm = T)
sum(pv$pv_pos, na.rm = T)
### this is an issue with the barcode for the plate maps versus the barcodes from the DHS -- because 50 missing
prelim <- left_join(dhs13adults, pv, by=c("dnaplate_short", "barcode"))
# Chunk 3
pvclusterprev <- prelim %>%
dplyr::filter(!is.na(pv_pos)) %>%
dplyr::group_by(cluster) %>%
dplyr::summarise(n=n(), cases=sum(pv_pos, na.rm = T), prev=round(mean(pv_pos, na.rm=T),2), clusterlong=mean(longnum), clusterlat=mean(latnum)) %>%
mutate_if(is.numeric, funs(round(., 2)))
DT::datatable(pvclusterprev, extensions='Buttons',
options = list(
searching = T,
pageLength = 20,
dom = 'Bfrtip',
buttons = c('csv')))
prelim <- left_join(prelim, pvclusterprev, by=c("cluster"))
# Chunk 4
## Map the DRC
tol <- 0.05
gadmpath <- "~/Google Drive/PhD_Work/Maps/"
setwd(gadmpath)
DRCcountry <- gSimplify(readOGR(dsn = "DRC_GADM/COD_adm_shp/", layer = "COD_adm0"), tol, topologyPreserve=TRUE)
DRCprov <- readOGR(dsn = "DRC_DHS/sdr_subnational_boundaries_2017-11-30/shps/", layer = "sdr_subnational_boundaries2")
######################################
###       Quick Plot Wrangle       ###
######################################
posclusters <- pvclusterprev[pvclusterprev$prev > 0,]
negclusters <- pvclusterprev[pvclusterprev$prev == 0,]
colnames(posclusters)[colnames(posclusters) %in% c("prev")] <- "Prevalence"
DRC_PvMapPlotObj <- ggplot() + geom_polygon(data=DRCprov, aes(x=long, y=lat, group=group), colour="#737373", fill="#f7fcf5") +
geom_point(data=negclusters, aes(x=clusterlong, y=clusterlat), shape=4, size=5, colour="#08519c") +
geom_point(data=posclusters, aes(x=clusterlong, y=clusterlat, size=Prevalence), shape=16, colour="#006d2c") +
scale_size_area() + # set up reasonable scale for point prev
coord_equal() +
labs(title="Clusters tested for P. vivax", subtitle="Green indicates positive hit, scaled by prevalence, X marks negative cluster (blue), Diamond (grey) represent not tested") +
theme(panel.border=element_blank()) +
theme(panel.background=element_blank()) +
theme(axis.ticks=element_blank()) +
theme(axis.text=element_blank()) +
theme(legend.title.align=0.5) +
labs(x=NULL, y=NULL)
plot(DRC_PvMapPlotObj)
# jpeg(filename="~/Desktop/PvMap_forJon.jpg", width=7, height=7, units = "in", res=1200)
# plot(DRC_PvMapPlotObj)
# graphics.off()
# Chunk 5
pv <- pv %>%
mutate_if(is.numeric, funs(round(., 2)))
DT::datatable(pv[pv$pv_pos == 1, !colnames(pv) %in% c("pv_pos")], extensions='Buttons',
options = list(
searching = T,
pageLength = 20,
dom = 'Bfrtip',
buttons = c('csv')))
str(pv)
pv %>%
mutate_if(is.numeric, funs(round(., 2)))
pv %>%
mutate(`p. vivax 18s (ct)` = ifelse(`p. vivax 18s (ct)` == "Undetermined", NA, `p. vivax 18s (ct)`)) %>%
mutate(`p. vivax 18s (ct)` = as.numeric(`p. vivax 18s (ct)`)) %>%
mutate_if(is.numeric, funs(round(., 2)))
# Data Wrangle
library(tidyverse)
library(data.table)
library(stringr)
# Command Line
library(optparse)
mtdt = read_tsv("~/Documents/MountPoints/mountedMeshnick/Projects/ASAP_Pv/PvASAP_metadata.csv", col_names = T)
mtdt <- mtdt[,1]
colnames(mtdt) <- c("Sample")
paste("Read metadata file in")
matebams <-dir("~/Documents/MountPoints/mountedScratchLL/Projects/ASAP_Pv/aln/", pattern = ".matefixed.bam", full.names = T)
matebams <- data.frame(matebams, stringsAsFactors = F)
matebams$filenames <-dir("~/Documents/MountPoints/mountedScratchLL/Projects/ASAP_Pv/aln/", pattern = ".matefixed.bam", full.names = F)
colnames(matebams) <- c("MateBamPaths", "MateBams")
# make column of dedup sample names
matebams$Sample <- matebams$MateBams
matebams$Sample <- gsub(pattern=".matefixed.bam", replacement = "", x=matebams$Sample)
colnames(matebams) <- c("MateBamPaths", "MateBams", "Sample")
samples <- c(matebams$Sample)
paste("Files read in")
for(i in 1:length(mtdt$Sample)){
matebams$TEMP <- str_detect(samples, coll(mtdt$Sample[i]))
matebams$SampleID[matebams$TEMP == TRUE] <- mtdt$Sample[i]
}
paste("Pattern of string detected")
View(matebams)
